name: Interop Tests
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
jobs:
  BuildAndTest:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
      with:
        path: mls
    - name: Start test MLS client
      working-directory: aws-mls/test_harness_integration 
      run: cargo run &
    - name: Clone test runner
      uses: actions/checkout@master
      with:
        repository: mlswg/mls-implementations
        ref: 3d338d341b1b02c5a2a1a631c60985ce844d2def
        path: interop
    - uses: arduino/setup-protoc@v1
      with:
        version: '3.x'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Run tests
      working-directory: interop/interop
      run: |
        go env -w GOPROXY=direct
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
        export GOPATH=$HOME/go
        export GOBIN=$GOPATH/bin
        export PATH=$PATH:$GOROOT:$GOPATH:$GOBIN
        GOFLAGS=-mod=mod go generate ./...
        make test-runner/test-runner
        for config in `ls configs | grep -v deep | sed -e "s/configs\///"`; do test-runner/test-runner --client localhost:50002 --config configs/$config ; done